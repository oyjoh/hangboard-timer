{"version":3,"sources":["components/bell.mp3","components/HangTimer/Selector.jsx","components/Timer.jsx","components/IntervalTimer.jsx","components/HangTimer/HangTimer.jsx","components/Header/Header.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","buttonGroup","alignItems","textField","marginTop","Selector","props","callBackFunc","parentCallBack","React","useState","pos","unit","text","min","max","incValue","clicks","startVal","show","state","setState","sendData","num","classes","Paper","elevation","className","Grid","container","item","xs","TextField","fullWidth","id","label","type","variant","value","String","onChange","event","console","log","Number","target","ButtonGroup","orientation","Button","size","disableElevation","color","onClick","Math","Timer","doIntervalChange","myInterval","setInterval","prevState","count","countArr","bell","UIfx","bellAudio","volume","throttleMs","this","play","length","action","next","shift","Container","maxWidth","Typography","gutterBottom","display","component","clearInterval","Component","IntervalTimer","hang","rest1","reps1","rest2","reps2","timerArr","child_timer_done","childHandler","bind","dataFromChild","arr","i","j","push","val","width","button","HangTimer","hangTime","intervalTime","reps","restTime","rounds","intervalTimer","callBackFunction","e","elem","timer","setTimer","mode","setMode","hide","setHide","gridElems","key","map","ToggleButtonGroup","exclusive","arial-label","toggleButtonGroup","ToggleButton","title","Header","AppBar","position","Toolbar","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.219889bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bell.cdaefc7c.mp3\";","import React from 'react';\nimport {Button, ButtonGroup, Paper} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        margin: theme.spacing(1),\n    },\n    buttonGroup: {\n        alignItems: 'center',\n        margin: theme.spacing(0.5),\n    },\n    textField: {\n        marginTop: theme.spacing(1),\n    }\n}));\n\nexport default function Selector(props) {\n\n    const callBackFunc = props.parentCallBack;\n\n    const [state, setState] = React.useState({\n        pos: props.pos,\n        unit: props.unit,\n        text: props.text,\n        min: props.min,\n        max: props.max,\n        incValue: props.incValue,\n        clicks: props.startVal,\n        show: true,\n    });\n\n    const sendData = (num) => {\n        callBackFunc({num: num, pos: state.pos});\n    };\n\n    const IncrementItem = () => {\n        const num = (Math.min(state.clicks + state.incValue, state.max));\n        setState({...state, clicks: num});\n        sendData(num);\n    };\n    const DecrementItem = () => {\n        const num = (Math.max(state.clicks - state.incValue, state.min));\n        setState({...state, clicks: num});\n        sendData(num);\n    };\n\n    const handleChange = (event) => {\n        console.log(Number(event.target.value));\n        const num =  Number(event.target.value);\n        setState({...state, clicks: num});\n        sendData(num);\n    };\n\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Paper elevation={0}>\n                <div className={classes.root}>\n                    <Grid container>\n                        <Grid item xs={9}>\n                            <TextField\n                                className={classes.textField}\n                                fullWidth\n                                id={state.text}\n                                label={state.text}\n                                type=\"number\"\n                                variant=\"outlined\"\n                                value={String(state.clicks)}\n                                onChange={handleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <ButtonGroup fullWidth orientation=\"vertical\" className={classes.buttonGroup}>\n                                <Button size=\"small\" disableElevation color=\"secondary\" value=\"inc\"\n                                        onClick={IncrementItem}><AddIcon/></Button>\n                                <Button size=\"small\" disableElevation color=\"primary\" value=\"dec\"\n                                        onClick={DecrementItem}><RemoveIcon/></Button>\n                            </ButtonGroup>\n                        </Grid>\n                    </Grid>\n\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, {Component} from 'react'\nimport UIfx from 'uifx'\nimport bellAudio from './bell.mp3'\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {Container} from \"@material-ui/core\";\n\nclass Timer extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 1,\n            text: 'undefined',\n            countArr: []\n        }\n    }\n\n\n    render() {\n        const bell = new UIfx(\n            bellAudio,\n            {\n                volume: 0.4, // number between 0.0 ~ 1.0\n                throttleMs: 100\n            }\n        );\n\n        const {count} = this.state\n        const {text} = this.state\n\n        if (count < 0) {\n            bell.play();\n            if (this.state.countArr.length < 1) {\n                this.props.action('done')\n                return null;\n            }\n            console.log(this.state.countArr);\n            let next = this.state.countArr.shift();\n            console.log(next);\n            this.setState({\n                count: next[0],\n                text: next[1]\n            })\n        }\n\n        return (\n            <div>\n                <Container maxWidth>\n                <Paper elevation={0}>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Timer\n                        </Typography>\n                        <Typography variant=\"h2\" display=\"block\" color=\"textSecondary\" component=\"h2\">\n                            {count}\n                        </Typography>\n                        <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n                            {text}\n                        </Typography>\n                </Paper>\n                </Container>\n            </div>\n        );\n    }\n\n    // setInterval\n    // clearInterval\n    componentDidMount() {\n        const {countArr} = this.props\n        this.setState({\n            count: 3, //3sek to ready up\n            text: 'Get ready',\n            countArr: countArr\n        });\n        this.doIntervalChange()\n    }\n\n    doIntervalChange = () => {\n        this.myInterval = setInterval(() => {\n            this.setState(prevState => ({\n                count: prevState.count - 1\n            }))\n        }, 1000)\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n}\n\nexport default Timer","import React, {Component} from 'react'\nimport Timer from \"./Timer\"\nimport Typography from \"@material-ui/core/Typography\";\n\nclass IntervalTimer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hang: this.props.hang,\n            rest1: this.props.rest1,\n            reps1: this.props.reps1,\n            rest2: this.props.rest2,\n            reps2: this.props.reps2,\n\n            timerArr: [],\n            child_timer_done: false\n        };\n        this.childHandler = this.childHandler.bind(this);\n    }\n\n    childHandler(dataFromChild) {\n        console.log('CHILD DONE')\n        this.setState({\n            child_timer_done: true\n        })\n    }\n\n    componentWillMount() {\n        console.log(this.state)\n        const arr = []\n\n        for (let i = 0; i < this.state.reps2; i++) {\n            for (let j = 0; j < this.state.reps1; j++) {\n                arr.push([this.state.hang, 'work'])\n                arr.push([this.state.rest1, 'rest'])\n            }\n            arr.push([this.state.rest2, 'rest'])\n        }\n        console.log(arr)\n        this.setState({\n            timerArr: arr\n        })\n        console.log(this.state.timerArr)\n    }\n\n    render() {\n        let val;\n        if (!this.state.child_timer_done) {\n            val = <Timer action={this.childHandler} countArr={this.state.timerArr}/>\n        } else {\n            val = <Typography variant=\"h2\" display=\"block\" color=\"textSecondary\" component=\"h2\">\n                DONE\n            </Typography>\n        }\n\n        return (\n            <div>\n                {val}\n            </div>\n        )\n    }\n}\n\nexport default IntervalTimer","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport Selector from './Selector';\nimport {Button, Grid} from '@material-ui/core';\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport IntervalTimer from \"../IntervalTimer\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(1),\n        width: 'flex',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n    }\n}));\n\nconst HangTimer = () => {\n\n    const [state, setState] = React.useState({\n        hangTime: 15,\n        intervalTime: 10,\n        reps: 4,\n        restTime: 120,\n        rounds: 3,\n        intervalTimer: null,\n    });\n\n    const callBackFunction = (e) => {\n        console.log(`${e.num} ${e.pos}`);\n        setState({...state, [e.pos]: e.num});\n    };\n\n    const classes = useStyles();\n\n    const [timer, setTimer] = useState({elem: null});\n\n    const [mode, setMode] = useState('list');\n\n    const [hide, setHide] = useState(false);\n\n    const handleModeChange = (event, value) => {\n        console.log(value);\n        switch (value) {\n            case \"list\": setHide(false); setMode(\"list\");break;\n            case \"grid\": setHide(false); setMode(\"grid\");break;\n            case \"hide\": setHide(true); setMode(\"hide\"); break;\n            default: break;\n        }\n    };\n\n    const selectors = [\n        {\n            item: <Selector\n                pos=\"hangTime\"\n                parentCallBack={callBackFunction}\n                unit=\"sec\"\n                text=\"Hang Time\"\n                startVal={state.hangTime}\n                min={0}\n                max={120}\n                incValue={5}/>\n            ,\n            key: 0\n        },\n        {\n            item: <Selector\n                pos=\"intervalTime\"\n                parentCallBack={callBackFunction}\n                unit=\"sec\"\n                text=\"Interval Rest\"\n                startVal={state.intervalTime}\n                min={0}\n                max={60}\n                incValue={5}/>\n            ,\n            key: 1\n        },\n        {\n            item: <Selector\n                pos=\"reps\"\n                parentCallBack={callBackFunction}\n                unit=\"reps\"\n                text=\"Reps\"\n                startVal={state.reps}\n                min={1}\n                max={20}\n                incValue={1}/>\n            ,\n            key: 2\n        },\n        {\n            item: <Selector\n                pos=\"restTime\"\n                parentCallBack={callBackFunction}\n                unit=\"sec\"\n                text=\"Set Rest\"\n                startVal={state.restTime}\n                min={0}\n                max={300}\n                incValue={10}/>\n            ,\n            key: 3\n        },\n        {\n            item: <Selector\n                pos=\"rounds\"\n                parentCallBack={callBackFunction}\n                unit=\"Rounds\"\n                text=\"Rounds\"\n                startVal={state.rounds}\n                min={1}\n                max={20}\n                incValue={1}/>\n            ,\n            key: 4\n        }\n    ];\n\n    const gridElems = selectors.map(elem =>\n        <Grid key={elem.key} item xs={mode === 'grid' ? 6 : 12}>\n            {elem.item}\n        </Grid>\n    );\n\n    const startTimer = () => {\n        console.log(\"Hey\");\n        setHide(true);\n        setMode(\"hide\");\n        setTimer({\n            ...timer, elem: <IntervalTimer\n                hang={state.hangTime}\n                rest1={state.intervalTime}\n                reps1={state.reps}\n                rest2={state.restTime}\n                reps2={state.rounds}/>\n        });\n    };\n\n    return (\n        <div className={classes.root}>\n            <ToggleButtonGroup\n                size=\"small\"\n                value={mode}\n                exclusive\n                onChange={handleModeChange}\n                arial-label=\"list mode\"\n                className={classes.toggleButtonGroup}\n            >\n                <ToggleButton value=\"list\">\n                    <ViewListIcon/>\n                </ToggleButton>\n                <ToggleButton value=\"grid\">\n                    <ViewModuleIcon/>\n                </ToggleButton>\n                <ToggleButton value=\"hide\">\n                    <VisibilityOffIcon/>\n                </ToggleButton>\n            </ToggleButtonGroup>\n            {!hide && (\n                <Grid container spacing={1}>\n                    {gridElems}\n                </Grid>\n            )}\n\n            <Button size=\"large\" color=\"primary\" variant=\"outlined\" onClick={startTimer}\n                    fullWidth className={classes.button}><PlayArrowIcon/></Button>\n            <Grid container >\n                <Grid item xs={12}>\n                    {timer.elem}\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default HangTimer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Header = (props) => {\n\n    const title = props.title;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nimport './App.css';\n\n\nimport HangTimer from './components/HangTimer/HangTimer'\nimport Header from './components/Header/Header'\n\nconst App = () => (\n            <div className=\"App\">\n                <Header title=\"Hangboard-timer\"/>\n                <HangTimer/>\n            </div>\n        );\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}