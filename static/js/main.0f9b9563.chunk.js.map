{"version":3,"sources":["components/bell.mp3","components/HangTimer/Selector.jsx","components/Timer.jsx","components/IntervalTimer.jsx","components/HangTimer/HangTimer.jsx","components/Header/Header.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","buttonGroup","alignItems","Selector","props","callBackFunc","parentCallBack","React","useState","pos","unit","text","min","max","incValue","clicks","startVal","show","state","setState","sendData","num","classes","Paper","elevation","className","Typography","gutterBottom","ButtonGroup","fullWidth","Button","size","disableElevation","color","value","onClick","Math","disabled","Timer","doIntervalChange","myInterval","setInterval","prevState","count","countArr","bell","UIfx","bellAudio","volume","throttleMs","this","play","console","log","next","shift","variant","display","component","clearInterval","Component","IntervalTimer","hang","rest1","reps1","rest2","reps2","timerArr","arr","i","j","push","flexWrap","toggleButtonGroup","marginBottom","HangTimer","hangTime","intervalTime","reps","restTime","rounds","intervalTimer","callBackFunction","e","elem","timer","setTimer","mode","setMode","gridElems","item","key","map","Grid","xs","ToggleButtonGroup","exclusive","onChange","event","arial-label","ToggleButton","container","title","Header","AppBar","position","Toolbar","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f9b9563.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bell.cdaefc7c.mp3\";","import React from 'react';\nimport {Button, ButtonGroup, Paper, Typography} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        margin: theme.spacing(1),\n    },\n    buttonGroup: {\n        alignItems: 'center',\n    },\n}));\n\nexport default function Selector(props) {\n\n    const callBackFunc = props.parentCallBack;\n\n    const [state, setState] = React.useState({\n        pos: props.pos,\n        unit: props.unit,\n        text: props.text,\n        min: props.min,\n        max: props.max,\n        incValue: props.incValue,\n        clicks: props.startVal,\n        show: true,\n    });\n\n    const sendData = (num) => {\n        callBackFunc({num: num, pos: state.pos});\n    };\n\n    const IncrementItem = () => {\n        const num = (Math.min(state.clicks + state.incValue, state.max));\n        setState({...state, clicks: num});\n        sendData(num);\n    };\n    const DecrementItem = () => {\n        const num = (Math.max(state.clicks - state.incValue, state.min));\n        setState({...state, clicks: num});\n        sendData(num);\n    };\n\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Paper elevation={0} >\n                <div className={classes.root}>\n                    <Typography gutterBottom>\n                        {state.text}\n                    </Typography>\n                    <ButtonGroup fullWidth>\n                        <Button size=\"small\" disableElevation color=\"primary\" value=\"dec\"\n                                onClick={DecrementItem}><RemoveIcon/></Button>\n                        <Button size=\"large\" disabled>{state.clicks} {state.unit}</Button>\n                        <Button size=\"small\" disableElevation color=\"secondary\" value=\"inc\"\n                                onClick={IncrementItem}><AddIcon/></Button>\n                    </ButtonGroup>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, {Component} from 'react'\nimport UIfx from 'uifx'\nimport bellAudio from './bell.mp3'\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nclass Timer extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 1,\n            text: 'undefined',\n            countArr: []\n        }\n    }\n\n\n    render() {\n        const bell = new UIfx(\n            bellAudio,\n            {\n                volume: 0.4, // number between 0.0 ~ 1.0\n                throttleMs: 100\n            }\n        );\n\n        const {count} = this.state\n        const {text} = this.state\n\n        if (count < 0) {\n            bell.play();\n            console.log(this.state.countArr);\n            let next = this.state.countArr.shift();\n            console.log(next);\n            this.setState({\n                count: next[0],\n                text: next[1]\n            })\n        }\n\n        return (\n            <div>\n                <Paper elevation={0}>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Timer\n                        </Typography>\n                        <Typography variant=\"h2\" display=\"block\" color=\"textSecondary\" component=\"h2\">\n                            {count}\n                        </Typography>\n                        <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n                            {text}\n                        </Typography>\n                </Paper>\n            </div>\n        );\n    }\n\n    // setInterval\n    // clearInterval\n    componentDidMount() {\n        const {countArr} = this.props\n        this.setState({\n            count: 3, //3sek to ready up\n            text: 'Get ready',\n            countArr: countArr\n        });\n        this.doIntervalChange()\n    }\n\n    doIntervalChange = () => {\n        this.myInterval = setInterval(() => {\n            this.setState(prevState => ({\n                count: prevState.count - 1\n            }))\n        }, 1000)\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n}\n\nexport default Timer","import React, {Component} from 'react'\nimport Timer from \"./Timer\"\n\nclass IntervalTimer extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            hang: this.props.hang,\n            rest1: this.props.rest1,\n            reps1: this.props.reps1,\n            rest2: this.props.rest2,\n            reps2: this.props.reps2,\n\n            timerArr: []\n        }\n\n    }\n    /*\n    componentWillMount() {\n        const {hang} = this.props\n        const {rest1} = this.props\n        const {reps1} = this.props\n        const {rest2} = this.props\n        const {reps2} = this.props\n        console.log('lol wtf')\n        this.setState({\n            hang: hang,\n            rest1: rest1,\n            reps1: reps1,\n            rest2: rest2,\n            reps2: reps2\n        })\n        console.log('hangtime: ' + this.state.hang)\n        this.createArr()\n    } */\n\n    componentWillMount() {\n        console.log(this.state)\n        const arr = []\n\n        for (let i = 0; i < this.state.reps2; i++) {\n            for (let j = 0; j < this.state.reps1; j++) {\n                arr.push([this.state.hang, 'work'])\n                arr.push([this.state.rest1, 'rest'])\n                console.log('its happen')\n            }\n            arr.push([this.state.rest2, 'rest'])\n        }\n        console.log(arr)\n        this.setState({\n            timerArr: arr\n        })\n        console.log(this.state.timerArr)\n    }\n\n    render() {\n        return(\n            <div>\n                <Timer countArr={this.state.timerArr}/>\n            </div>\n        )\n    }\n}\n\nexport default IntervalTimer","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport Selector from './Selector';\nimport {Button, Grid} from '@material-ui/core';\n\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\n\nimport IntervalTimer from \"../IntervalTimer\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: theme.spacing(1)\n    },\n    toggleButtonGroup:{\n        marginBottom: theme.spacing(1),\n    }\n}));\n\nconst HangTimer = () => {\n\n    const [state, setState] = React.useState({\n        hangTime: 15,\n        intervalTime: 10,\n        reps: 4,\n        restTime: 120,\n        rounds: 3,\n        intervalTimer: null,\n    });\n\n    const callBackFunction = (e) => {\n        console.log(`${e.num} ${e.pos}`);\n        setState( {...state, [e.pos]: e.num});\n    };\n\n    const classes = useStyles();\n\n    const [timer, setTimer] = useState({elem: null});\n\n    const [mode, setMode] = useState('list');\n\n    const handleModeChange = (event, value) => {\n        console.log(value);\n        if (value) {\n            setMode(value);\n        }\n    };\n\n    const selectors = [\n        {\n            item: <Selector\n                pos=\"hangTime\"\n                parentCallBack={callBackFunction}\n                unit=\"sec\"\n                text=\"Hang Time\"\n                startVal={state.hangTime}\n                min={0}\n                max={120}\n                incValue={5}/>\n                ,\n            key: 0\n        },\n        {\n            item: <Selector\n                pos=\"intervalTime\"\n                parentCallBack={callBackFunction}\n                unit=\"sec\"\n                text=\"Interval Rest\"\n                startVal={state.intervalTime}\n                min={0}\n                max={60}\n                incValue={5}/>\n                ,\n            key: 1\n        },\n        {\n            item: <Selector\n                pos=\"reps\"\n                parentCallBack={callBackFunction}\n                unit=\"reps\"\n                text=\"Reps\"\n                startVal={state.reps}\n                min={0}\n                max={10}\n                incValue={1}/>\n                ,\n            key: 2\n        },\n        {\n            item: <Selector\n                pos=\"restTime\"\n                parentCallBack={callBackFunction}\n                unit=\"sec\"\n                text=\"Set Rest\"\n                startVal={state.restTime}\n                min={0}\n                max={300}\n                incValue={10}/>\n                ,\n            key: 3\n        },\n        {\n            item: <Selector\n                pos=\"rounds\"\n                parentCallBack={callBackFunction}\n                unit=\"Rounds\"\n                text=\"Rounds\"\n                startVal={state.rounds}\n                min={0}\n                max={10}\n                incValue={1}/>\n                ,\n            key: 4\n        }\n    ];\n\n    const gridElems = selectors.map(elem =>\n        <Grid key={elem.key} item xs={mode === 'grid' ? 6 : 12}>\n            {elem.item}\n        </Grid>\n    );\n\n    const startTimer = () => {\n        console.log(\"Hey\");\n        setTimer({...timer, elem: <IntervalTimer\n                hang={state.hangTime}\n                rest1={state.intervalTime}\n                reps1={state.reps}\n                rest2={state.restTime}\n                reps2={state.rounds}/>});\n    };\n\n    return (\n        <div className={classes.root}>\n            <ToggleButtonGroup\n                size=\"small\"\n                value={mode}\n                exclusive\n                onChange={handleModeChange}\n                arial-label=\"list mode\"\n                className={classes.toggleButtonGroup}\n            >\n                <ToggleButton value=\"list\">\n                    <ViewListIcon/>\n                </ToggleButton>\n                <ToggleButton value=\"grid\">\n                    <ViewModuleIcon/>\n                </ToggleButton>\n            </ToggleButtonGroup>\n            <Grid container spacing={1}>\n                {gridElems}\n                <Grid item xs={12}>\n                    <Button size=\"large\" color=\"primary\" variant=\"outlined\" onClick={startTimer} fullWidth><PlayArrowIcon/></Button>\n                </Grid>\n                <Grid item xs={12}>\n                    {timer.elem}\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default HangTimer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Header = (props) => {\n\n    const title = props.title;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nimport './App.css';\n\n\nimport HangTimer from './components/HangTimer/HangTimer'\nimport Header from './components/Header/Header'\n\nconst App = () => (\n            <div className=\"App\">\n                <Header title=\"Hangboard-timer\"/>\n                <HangTimer/>\n            </div>\n        );\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}