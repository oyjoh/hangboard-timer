{"version":3,"sources":["assets/bell.mp3","components/HangTimer/Selector.jsx","components/PlayButton/PlayButton.jsx","components/PlayButton/index.jsx","components/Timer/Timer.jsx","components/Timer/index.jsx","components/Timer/IntervalTimer.jsx","components/HangTimer/HangTimer.jsx","components/HangTimer/index.jsx","components/Header/Header.jsx","components/Header/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","buttonGroup","alignItems","textField","marginTop","Selector","props","classes","callBackFunc","parentCallBack","React","useState","pos","unit","text","min","max","incValue","clicks","startVal","show","state","setState","sendData","num","Paper","elevation","className","Grid","container","item","xs","TextField","fullWidth","id","label","type","variant","value","String","onChange","event","Number","target","ButtonGroup","orientation","Button","size","disableElevation","color","onClick","Math","width","PlayButton","playPauseCallback","playButton","soundEffect","Audio","console","log","play","then","pauseButton","stopButton","buttons","Timer","count","countArr","bell","bellAudio","useEffect","interval","setInterval","length","action","next","shift","paused","clearInterval","Container","Typography","gutterBottom","display","component","toUpperCase","IntervalTimer","hang","rest1","reps1","rest2","reps2","timerArr","arr","i","j","push","makeArr","child_timer_done","val","button","HangTimer","hangTime","intervalTime","reps","restTime","rounds","isPaused","intervalTimer","callBackFunction","e","updateTimer","b","setTimer","timer","mode","setMode","hide","setHide","gridElems","map","elem","key","ToggleButtonGroup","exclusive","arial-label","toggleButtonGroup","ToggleButton","error","title","Header","AppBar","position","Toolbar","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2902193d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bell.cdaefc7c.mp3\";","import React from 'react';\nimport {Button, ButtonGroup, Paper, Grid, TextField} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        margin: theme.spacing(1),\n    },\n    buttonGroup: {\n        alignItems: 'center',\n        margin: theme.spacing(0.5),\n    },\n    textField: {\n        marginTop: theme.spacing(1),\n    }\n}));\n\nconst Selector = (props) => {\n\n    const classes = useStyles();\n\n    const callBackFunc = props.parentCallBack;\n\n    const [state, setState] = React.useState({\n        pos: props.pos,\n        unit: props.unit,\n        text: props.text,\n        min: props.min,\n        max: props.max,\n        incValue: props.incValue,\n        clicks: props.startVal,\n        show: true,\n    });\n\n    const sendData = (num) => {\n        callBackFunc({num: num, pos: state.pos});\n    };\n\n    const IncrementItem = () => {\n        const num = (Math.min(state.clicks + state.incValue, state.max));\n        setState({...state, clicks: num});\n        sendData(num);\n    };\n    const DecrementItem = () => {\n        const num = (Math.max(state.clicks - state.incValue, state.min));\n        setState({...state, clicks: num});\n        sendData(num);\n    };\n\n    const handleChange = (event) => {\n        const num =  Number(event.target.value);\n        setState({...state, clicks: num});\n        sendData(num);\n    };\n\n    return (\n        <div>\n            <Paper elevation={0}>\n                <div className={classes.root}>\n                    <Grid container>\n                        <Grid item xs={9}>\n                            <TextField\n                                className={classes.textField}\n                                fullWidth\n                                id={state.text}\n                                label={state.text}\n                                type=\"number\"\n                                variant=\"outlined\"\n                                value={String(state.clicks)}\n                                onChange={handleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <ButtonGroup fullWidth orientation=\"vertical\" className={classes.buttonGroup}>\n                                <Button size=\"small\" disableElevation color=\"secondary\" value=\"inc\"\n                                        onClick={IncrementItem}><AddIcon/></Button>\n                                <Button size=\"small\" disableElevation color=\"primary\" value=\"dec\"\n                                        onClick={DecrementItem}><RemoveIcon/></Button>\n                            </ButtonGroup>\n                        </Grid>\n                    </Grid>\n\n                </div>\n            </Paper>\n        </div>\n    );\n};\n\nexport default Selector;","import React from 'react';\nimport {Button, ButtonGroup} from '@material-ui/core';\n\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport StopIcon from '@material-ui/icons/Stop';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(1),\n        width: 'flex',\n    },\n}));\n\nconst PlayButton = (props) => {\n\n    const classes = useStyles();\n\n    const callBackFunc = props.playPauseCallback;\n\n    const [state, setState] = React.useState(\"play\");\n\n    const handleStart = () => {\n        const soundEffect = new Audio();\n        console.log(\"Playing null sound\");\n        soundEffect.play().then();\n        callBackFunc(\"play\");\n        setState(\"pause\");\n    };\n\n    const handlePause = () => {\n        callBackFunc(\"pause\");\n        setState(\"playStop\");\n    };\n\n    const handleStop = () => {\n        callBackFunc(\"stop\");\n        setState(\"stop\");\n    };\n\n    const playButton =\n        <Button size=\"large\" variant=\"outlined\" value=\"play\" onClick={handleStart}>\n            <PlayArrowIcon/>\n        </Button>;\n\n    const pauseButton =\n        <Button size=\"large\" variant=\"outlined\" value=\"pause\" onClick={handlePause}>\n            <PauseIcon/>\n        </Button>;\n\n    const stopButton =\n        <Button size=\"large\" color=\"secondary\" variant=\"outlined\" value=\"stop\" onClick={handleStop}>\n            <StopIcon/>\n        </Button>;\n\n    const buttons =\n        <ButtonGroup fullWidth>\n            {(state === \"play\" || state === \"playStop\" || state === \"stop\") && playButton}\n            {(state === \"pause\") && pauseButton}\n            {(state === \"playStop\") && stopButton}\n        </ButtonGroup>;\n\n    return (\n        <div className={classes.root}>\n            {buttons}\n        </div>\n    );\n};\n\nexport default PlayButton;\n","import PlayButton from \"./PlayButton\";\n\nexport default PlayButton;","import React, {useEffect, useState} from 'react'\nimport bellAudio from '../../assets/bell.mp3'\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {Container} from \"@material-ui/core\";\n\nconst Timer = (props) => {\n\n    const [state, setState] = useState(\n        {\n            count: 5,\n            text: 'Get ready',\n            countArr: props.countArr,\n        }\n    );\n\n    const bell = new Audio(bellAudio);\n\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (state.count <= 0) {\n                bell.play().then();\n                console.log(\"Playing sound\");\n                if (state.countArr.length < 1) {\n                    props.action('done');\n                    return null;\n                }\n                let next = state.countArr.shift();\n                setState({...state,\n                    count: next[0],\n                    text: next[1]\n                })\n            }  else if (!props.paused) {\n                setState({...state,count: state.count - 1} );\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [props, bell, state]);\n\n\n    return (\n        <div>\n            <Container>\n                <Paper elevation={0}>\n                    <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>\n                        Timer\n                    </Typography>\n                    <Typography variant=\"h1\" display=\"block\" color=\"textSecondary\" component=\"h2\">\n                        {state.count}\n                    </Typography>\n                    <Typography variant=\"h5\" display=\"block\" color=\"textSecondary\">\n                        {state.text.toUpperCase()}\n                    </Typography>\n                </Paper>\n            </Container>\n        </div>\n    );\n};\n\n\nexport default Timer;","import IntervalTimer from \"./IntervalTimer\";\n\nexport default IntervalTimer;","import React from 'react'\nimport Typography from \"@material-ui/core/Typography\";\nimport Timer from \"./Timer\";\n\nconst IntervalTimer = (props) => {\n\n    const makeArr = () => {\n        const arr = [];\n\n        for (let i = 0; i < props.reps2; i++) {\n            for (let j = 0; j < props.reps1; j++) {\n                arr.push([props.hang, 'work']);\n                arr.push([props.rest1, 'rest']);\n            }\n            arr.push([props.rest2, 'rest'])\n        }\n        return arr;\n    };\n\n    const [state, setState] = React.useState(\n        {\n            hang: props.hang,\n            rest1: props.rest1,\n            reps1: props.reps1,\n            rest2: props.rest2,\n            reps2: props.reps2,\n\n            timerArr: makeArr(),\n            child_timer_done: false\n        }\n    );\n\n    const childHandler = () => {\n        setState({...state, child_timer_done: true})\n    };\n\n    const val =\n        !state.child_timer_done\n            ? <Timer action={childHandler} countArr={state.timerArr} paused={props.paused}/>\n            : <Typography variant=\"h2\" display=\"block\" color=\"textSecondary\" component=\"h2\"> DONE </Typography>;\n\n    return (\n        <div>\n            {val}\n        </div>\n    );\n};\n\nexport default IntervalTimer;","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport Selector from './Selector';\nimport {Grid} from '@material-ui/core';\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\n\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport PlayButton from '../PlayButton';\nimport IntervalTimer from \"../Timer\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(1),\n        width: 'flex',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n    }\n}));\n\nconst HangTimer = () => {\n\n\n    const [state, setState] = React.useState({\n        hangTime: 15,\n        intervalTime: 10,\n        reps: 4,\n        restTime: 120,\n        rounds: 3,\n        isPaused: false,\n        intervalTimer: null,\n    });\n\n    const callBackFunction = (e) => {\n        setState({...state, [e.pos]: e.num});\n    };\n\n    const callBackPlayPause = (e) => {\n        switch (e) {\n            case \"play\" : setHide(true); setMode(\"hide\"); updateTimer(false); break;\n            case \"pause\" : updateTimer(true); break;\n            case \"stop\" : setHide(false); setMode(\"list\"); setTimer(null); break;\n            default : console.error(\"CALLBACK GAVE UNVALID VALUE\");\n        }\n    };\n\n    const updateTimer = (b) => {\n        setTimer(\n            <IntervalTimer\n                paused={b}\n                hang={state.hangTime}\n                rest1={state.intervalTime}\n                reps1={state.reps}\n                rest2={state.restTime}\n                reps2={state.rounds}/>\n        );\n    };\n\n    const classes = useStyles();\n\n    const [timer, setTimer] = useState(null);\n\n    const [mode, setMode] = useState('list');\n\n    const [hide, setHide] = useState(false);\n\n    const handleModeChange = (event, value) => {\n        switch (value) {\n            case \"list\": setHide(false); setMode(\"list\");break;\n            case \"grid\": setHide(false); setMode(\"grid\");break;\n            case \"hide\": setHide(true); setMode(\"hide\"); break;\n            default: break;\n        }\n    };\n\n    const selectors = [\n        <Selector\n                pos=\"hangTime\"\n                parentCallBack={callBackFunction}\n                unit=\"sec\"\n                text=\"Hang Time\"\n                startVal={state.hangTime}\n                min={0}\n                max={120}\n                incValue={5}/>,\n        <Selector\n                pos=\"intervalTime\"\n                parentCallBack={callBackFunction}\n                unit=\"sec\"\n                text=\"Interval Rest\"\n                startVal={state.intervalTime}\n                min={0}\n                max={60}\n                incValue={5}/>,\n\n        <Selector\n                pos=\"reps\"\n                parentCallBack={callBackFunction}\n                unit=\"reps\"\n                text=\"Reps\"\n                startVal={state.reps}\n                min={1}\n                max={20}\n                incValue={1}/>,\n        <Selector\n                pos=\"restTime\"\n                parentCallBack={callBackFunction}\n                unit=\"sec\"\n                text=\"Set Rest\"\n                startVal={state.restTime}\n                min={0}\n                max={300}\n                incValue={10}/>,\n        <Selector\n                pos=\"rounds\"\n                parentCallBack={callBackFunction}\n                unit=\"Rounds\"\n                text=\"Rounds\"\n                startVal={state.rounds}\n                min={1}\n                max={20}\n                incValue={1}/>\n    ];\n\n    const gridElems = selectors.map((elem, key) =>\n        <Grid key={key} item xs={mode === 'grid' ? 6 : 12}>\n            {elem}\n        </Grid>\n    );\n\n\n    return (\n        <div className={classes.root}>\n            <ToggleButtonGroup\n                size=\"small\"\n                value={mode}\n                exclusive\n                onChange={handleModeChange}\n                arial-label=\"list mode\"\n                className={classes.toggleButtonGroup}\n            >\n                <ToggleButton value=\"list\">\n                    <ViewListIcon/>\n                </ToggleButton>\n                <ToggleButton value=\"grid\">\n                    <ViewModuleIcon/>\n                </ToggleButton>\n                <ToggleButton value=\"hide\">\n                    <VisibilityOffIcon/>\n                </ToggleButton>\n            </ToggleButtonGroup>\n            {!hide && (\n                <Grid container spacing={1}>\n                    {gridElems}\n                </Grid>\n            )}\n\n            <PlayButton playPauseCallback={callBackPlayPause}/>\n            <Grid container >\n                <Grid item xs={12}>\n                    {timer}\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default HangTimer;","import HangTimer from \"./HangTimer\";\n\nexport default HangTimer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Header = (props) => {\n\n    const title = props.title;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Header;\n","import Header from \"./Header\";\n\nexport default Header;","import React from \"react\";\nimport './App.css';\n\n\nimport HangTimer from './components/HangTimer'\nimport Header from './components/Header'\n\nconst App = () => (\n            <div className=\"App\">\n                <Header title=\"Hangboard-timer\"/>\n                <HangTimer/>\n            </div>\n        );\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}